<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Krrrcks: Farb-Trigger</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Kommunikation</name>
                <script>-- Keine Ahnung, ob das besser geht, aber ich will die ganze Zeile einf√§rben und nicht nur
-- den &quot;Match&quot;.

selectCurrentLine()
fg(farben.vg.komm)
bg(farben.hg.komm)
resetFormat()</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#00aaff</mFgColor>
                <mBgColor>#000000</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>^(.*) teilt Dir mit: (.*)$</string>
                    <string>^Du teilst (.*) mit: (.*)$</string>
                    <string>Du sagst:</string>
                    <string>sagt:</string>
                    <string>Du fragst:</string>
                    <string>fragt:</string>
                    <string>Wecker klingelt bei Dir.</string>
                    <string>denkt:</string>
                    <string>Matrix:</string>
                    <string>[Team </string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                    <integer>1</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Kampf: Zustand</name>
                <script>local zustand = {}
 
zustand[&quot;ist absolut fit.&quot;] = 1
zustand[&quot;ist leicht geschwaecht.&quot;] = 0.9 -- Kaempfer Fokus
zustand[&quot;ist schon etwas geschwaecht.&quot;] = 0.9 -- untersuche
zustand[&quot;fuehlte sich auch schon besser.&quot;] = 0.8 -- Kaempfer Fokus
zustand[&quot;fuehlte sich heute schon besser.&quot;] = 0.8 -- untersuche
zustand[&quot;ist leicht angekratzt.&quot;] = 0.7 -- Kaempfer Fokus
zustand[&quot;ist leicht angeschlagen.&quot;] = 0.7 -- untersuche
zustand[&quot;ist nicht mehr taufrisch.&quot;] = 0.6 -- Kaempfer Fokus
zustand[&quot;sieht nicht mehr taufrisch aus.&quot;] = 0.6 -- untersuche
zustand[&quot;sieht recht mitgenommen aus.&quot;] = 0.5 -- Kaempfer Fokus
zustand[&quot;macht einen mitgenommenen Eindruck.&quot;] = 0.5 -- untersuche
zustand[&quot;wankt bereits bedenklich.&quot;] = 0.4
zustand[&quot;ist in keiner guten Verfassung.&quot;] = 0.3
zustand[&quot;braucht dringend einen Arzt.&quot;] = 0.2
zustand[&quot;steht auf der Schwelle des Todes.&quot;]= 0.1


local ausgabe = zustand[matches[1]]

if ausgabe then 
  ausgabe = &quot; (&quot; .. ausgabe*100 .. &quot;%)&quot; 
else
  ausgabe = &quot; (???%)&quot;
end

selectCurrentLine()
fg(farben.vg.info)
bg(farben.hg.info)
echo(ausgabe)
resetFormat()</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>ist absolut fit.</string>
                    <string>ist leicht geschwaecht.</string>
                    <string>ist schon etwas geschwaecht.</string>
                    <string>fuehlte sich auch schon besser.</string>
                    <string>fuehlte sich heute schon besser.</string>
                    <string>ist leicht angekratzt.</string>
                    <string>ist leicht angeschlagen.</string>
                    <string>ist nicht mehr taufrisch.</string>
                    <string>sieht nicht mehr taufrisch aus.</string>
                    <string>sieht recht mitgenommen aus.</string>
                    <string>macht einen mitgenommenen Eindruck.</string>
                    <string>wankt bereits bedenklich.</string>
                    <string>ist in keiner guten Verfassung.</string>
                    <string>braucht dringend einen Arzt.</string>
                    <string>steht auf der Schwelle des Todes.</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Kampf: Infos</name>
                <script>selectCurrentLine()
fg(farben.vg.info)
bg(farben.hg.info)
resetFormat()
</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>faellt tot zu Boden.</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Kampf: Flucht</name>
                <script>selectCurrentLine()
fg(farben.vg.info)
bg(farben.hg.info)
resetFormat()
</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>^Die Angst ist staerker als Du ... Du willst nur noch weg hier.$</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Alarm: Post</name>
                <script>selectCurrentLine()
fg(farben.vg.alarm)
bg(farben.hg.alarm)
resetFormat()</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>^Du hast (.*) neue Brief(.*) im Postamt liegen.$</string>
                    <string>Ein Postreiter ruft Dir aus einiger Entfernung zu, dass Du neue Post hast!</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                    <integer>0</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Para-/Normalwelt</name>
                <script>-- Pr√ºfung √ºber Portal 23

selectCurrentLine()

if (matches[3] == &quot;gruenlich&quot;) then
    fg(farben.vg.info)
    bg(farben.hg.info)

    ME.para = 0
end

if (matches[3] == &quot;roetlich&quot;) then
    fg(farben.vg.alarm)
    bg(farben.hg.alarm)
    ME.para = 1
end

zeigeRaum()
resetFormat()</script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList>
                    <string>^(.*)Du bist hier im Innern einer (.*) schimmernden Kugel,$</string>
                    <string>^(.*)Im Innern einer (.*) schimmernden Kugel.$</string>
                </regexCodeList>
                <regexCodePropertyList>
                    <integer>1</integer>
                    <integer>1</integer>
                </regexCodePropertyList>
            </Trigger>
            <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>Bewegung: Ausgaenge</name>
            <script>selectCaptureGroup(1)
fg(farben.vg.info)
bg(farben.hg.info)
resetFormat()</script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName></packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList>
                <string>^Es gibt (.*) sichtbare Ausgaenge:</string>
                <string>^Es gibt einen sichtbaren Ausgang: </string>
                <string>^Es gibt keinen sichtbaren Ausgang.</string>
                <string>^Es gibt keine sichtbaren Ausgaenge.</string>
            </regexCodeList>
            <regexCodePropertyList>
                <integer>1</integer>
                <integer>1</integer>
                <integer>1</integer>
                <integer>1</integer>
            </regexCodePropertyList>
            </Trigger>
        </TriggerGroup>
    </TriggerPackage>
    <TimerPackage/>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>Krrrcks: Kleinkram</name>
            <script>--[[ Hier sammel ich Kleinkram, der nirgendwo anders gut hinpasst. Kleinere Skripte
    und Aliase ]]--</script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Umlaute</name>
                <script>-- echo(&quot;&lt;UMLAUTE herausgenommen&gt; &lt;&quot;..command..&quot;&gt;\n&quot;);
command = string.gsub(command, '√º', 'ue' );
command = string.gsub(command, '√∂', 'oe' );
command = string.gsub(command, '√§', 'ae' );
command = string.gsub(command, '√Ñ', 'Ae' );
command = string.gsub(command, '√ñ', 'Oe' );
command = string.gsub(command, '√ú', 'Ue' );
command = string.gsub(command, '√ü', 'ss' );

send(command);</script>
                <command></command>
                <packageName></packageName>
                <regex>√º|√∂|√§|√ú|√ñ|√Ñ|√ü</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Haus betreten</name>
                <script>-- Mit &quot;#haus&lt;name&gt;&quot; ein Seherhaus aufschliessen und betreten; 
-- wird der Name weggelassen, wird automatisch ME.name angehaengt.

local wessen = matches[2] 

if wessen == &quot;&quot; then wessen = ME.name end

if wessen then
    send(&quot;schliesse haus von &quot; .. wessen .. &quot; auf&quot;)
    send(&quot;oeffne haus von &quot; .. wessen)
    send(&quot;betrete haus von &quot; .. wessen)
    send(&quot;schliesse haus&quot;)
    send(&quot;schliesse haus ab&quot;)
end</script>
                <command></command>
                <packageName></packageName>
                <regex>^#haus(.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Hilfe</name>
                <script>fg(&quot;yellow&quot;)

echo([[
Folgende Sachen gibt es und funktionieren:

* Umlaute werden erkannt und durch passende Umschreibungen ersetzt.

* Einstellungen und auch Globale Variablen
In &quot;Scripts-&gt;Einstellugnen&quot; habe ich einige globale Variablen und 
einstellbare Sachen hinterlegt:

ME: ME ist ein Table, in dem ich alle m√∂glichen Informationen zum User speichere; 
  hier landen bspw. der Name, aber auch in welcher Para-Welt man sich befindet etc. 
  Soweit m√∂glich werden die entsprechenden Werte bspw. aus GMCP-Nachrichten 
  gezogen.
farben: In diesem Table verwalte ich die f√ºr die Trigger und Skripte zu verwendenden
  Farben.

* Farbtrigger
In Trigger befinden sich Farbtrigger, welche die Ebenen einf√§rben.

* Wegeskripte von tf
Ich hatte einige Wegeskripte bei tf, die insbesondere mit einem &quot;/dopath&quot; 
zusammenarbeiteten. Ich habe diese nahezu 1:1 rekonstruiert, sie sind in den Skripten
und den Aliasen zu finden.

* Kleinkram
#haus&lt;name&gt; : Wenn man vor einem Seherhaus steht, kann man es damit  
  aufschlie√üen, betreten und wieder verschlie√üen. Achtung: Kein Leerzeichen
  zwischen &quot;#haus&quot; und dem Namen!
]])</script>
                <command></command>
                <packageName></packageName>
                <regex>^#help$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Home</name>
                <script>-- funzt nur, wenn man den Kommandoseparator auf | gesetzt hat; ist
-- im Standard auf ; </script>
                <command>#go haus|#haus</command>
                <packageName></packageName>
                <regex>^#home$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>K√§mpfer: Gr√º√üe</name>
                <script>send(&quot;stehe still&quot;)
send(&quot;gruesse &quot;  .. matches[2])
</script>
                <command></command>
                <packageName></packageName>
                <regex>^#gruesse (.+)$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>Krrrcks: Alte Wege</name>
            <script>-- Die alten tf-Wegeskripte. 
</script>
            <command></command>
            <packageName></packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>Weg ablaufen</name>
                <script>-- Die alten tf-Wegeskripte. 

--[[ Gestartet werden diese mit &quot;#go &lt;ziel&gt;&quot;, dann wird 
    Ziel ausgew√§hlt und die Sachen zum Mud geschossen. Dabei
    ist zu beachten, dass die meisten Skripte bei einem Portal
    bzw. beim Sandtiger starten. ]]--

-- Als Beispiel zwei Wege: Sandtiger-Hochebene und zurueck.

wege.he = { &quot;#dopath w n n w w w n nw nw nw w nw nw nw w w no no o no o o&quot;, &quot;folge hund&quot; }
wege.he_st = { &quot;folge hund&quot;, &quot;#dopath w w sw w sw sw o o so so so o so so so s o o o s s o&quot; }

local kommandos = wege[matches[2]]

if type(kommandos) == &quot;table&quot; then
  alt_ws(kommandos)
end

</script>
                <command></command>
                <packageName></packageName>
                <regex>^#go (.*)$</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>Altes dopath</name>
                <script>-- Ersetzt das alte tf-dopath; √ºbergeben wird ein String mit 
-- Ausg√§ngen.

-- Bspw: &quot;#dopath o o w n&quot; macht dann jeweils send(&quot;o&quot;), 
-- send(&quot;o&quot;), send(&quot;w&quot;), send(&quot;n&quot;)

alt_dopath(matches[2])</script>
                <command></command>
                <packageName></packageName>
                <regex>^#dopath (.*)$</regex>
            </Alias>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>Krrrcks: Einstellungen</name>
            <packageName></packageName>
            <script>-- Einstellungen (Farben etc.)</script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>Farben</name>
                <packageName></packageName>
                <script>-- Einstellungen fuer Farben Allgemein
farben = {}
farben.vg = 
  { komm = &quot;cyan&quot;,
    ebenen = &quot;magenta&quot;,
    info = &quot;green&quot;,
    alarm = &quot;white&quot;,
    script = &quot;dark_green&quot; }
farben.hg = 
  { komm = &quot;black&quot;,
    ebenen = &quot;black&quot;,
    info = &quot;black&quot;, 
    alarm = &quot;red&quot;,
    script = &quot;black&quot; }

-- komm: Kommunikation wie teile-mit
-- ebenen: Einfaerben der &quot;normalen&quot; Ebenen
-- info: Einfaerben von Informationen des Muds (Status Gegner)
-- alarm: Alarm-Nachrichten
-- script: Nachrichten, die nicht vom Mud, sondern von einem Script stammen.

-- Einstellungen fuer Farben Kampfscroll

function msg (type, what)
  -- setzt VG und HG je nach Typ der Kommunikation
  local vg = farben.vg[type]
  local hg = farben.hg[type]

  if vg and hg then
    cecho(&quot;&lt;&quot;..vg..&quot;:&quot;..hg..&quot;&gt;&quot;..what)
  else
    echo(what)
  end
end
</script>
                <eventHandlerList/>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>Spieler</name>
                <packageName></packageName>
                <script>-- Variablen zum Spieler

ME = {}
ME.name = &quot;Jemand&quot;
ME.stufe = 0

ME.para = 0
ME.vorsicht = 0
ME.fluchtrichtung = &quot;&quot;
ME.lp_alt = 0

GUI = {}
GUI.angezeigt = false
GUI.lp_anzeige_blinkt = false

wege = {}
</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>Krrrcks: Alte Wege</name>
            <packageName></packageName>
            <script>-- Damit ich vor Einsatz des Mappers schon mal herumirren kann,
-- hier ein paar Funktionen, um die bisherigen Wege nutzen zu k√∂nnen.

</script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>Wegeskripte fuer tf</name>
                <packageName></packageName>
                <script>function alt_dopath(wegestring)
  if not type(wegestring) == &quot;string&quot; then
        wegestring = &quot;&quot;
    end
    for w in string.gmatch(wegestring, &quot;%a+&quot;) do
      send(w)
    end
end

function alt_ws(kommandos, lang)
    if not type(kommandos) == &quot;table&quot; then
        kommandos = {}
    end
    if not lang then
        send(&quot;ultrakurz&quot;)
    end
    for k,v in ipairs(kommandos) do
        -- Wenn &quot;#dopath&quot; oder &quot;#go&quot;, dann das Ali ausf√ºhren
        if (type(v) == &quot;string&quot; and string.sub(v,1,7) == &quot;#dopath&quot;)
            or (type(v) == &quot;string&quot; and string.sub(v,1,3) == &quot;#go&quot;) 
       then 
            expandAlias(v)
        else    
        -- sonst ohne Ali Ersetzung senden (erst mal keine weiteren Ersetzungen
        -- vorgesehen.
            send(v)
        end
    end
    if not lang then
        send(&quot;lang&quot;)
        send(&quot;schau&quot;)
    end
end</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>Krrrcks: Debug</name>
            <packageName></packageName>
            <script>-- Ein paar Debugging-Funktionen</script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>Debug Ausgabe</name>
                <packageName></packageName>
                <script>function debugText(text)
    echo(&quot;DEBUG: &quot; .. text)
end

function debugDisplay(obj)
    echo(&quot;DEBUG: &quot;)
    display(obj)
end</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>Krrrcks: GUI</name>
            <packageName></packageName>
            <script>-- Hierin sammel ich alles, was f√ºr die GUI von Wichtigkeit sein k√∂nnte

--[[
Etwas trickreich ist folgendes:
Der &quot;Script name&quot; (bspw. &quot;zeigeVitaldaten&quot; muss genau dem Funktionsnamen f√ºr 
diese Funktion entsprechen, sonst tut das nicht).
]]--</script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>initGMCP</name>
                <packageName></packageName>
                <script>function initGMCP() 
    sendGMCP( [[Core.Supports.Debug 20 ]])
    sendGMCP( [[Core.Supports.Set [ &quot;MG.char 1&quot;, &quot;MG.room 1&quot;, &quot;comm.channel 1&quot; ] ]])
end</script>
                <eventHandlerList>
                    <string>gmcp.Char</string>
                </eventHandlerList>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>initBase</name>
                <packageName></packageName>
                <script>function initBase() 
    ME.name = gmcp.MG.char.base.name 
    ME.stufe = gmcp.MG.char.info.level

    if not GUI.angezeigt then
        initGUI()
        GUI.angezeigt = true
    end

end</script>
                <eventHandlerList>
                    <string>gmcp.MG.char.base</string>
                    <string>gmcp.MG.char.info</string>
                </eventHandlerList>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>zeigeVitaldaten</name>
                <packageName></packageName>
                <script>function zeigeVitaldaten()

  -- GMCP Vitaldaten merken

  ME.lp = gmcp.MG.char.vitals.hp
  ME.lp_max = gmcp.MG.char.maxvitals.max_hp
  ME.kp = gmcp.MG.char.vitals.sp
  ME.kp_max = gmcp.MG.char.maxvitals.max_sp

  -- Werte der Balken aktualisieren
  
  GUI.lp_anzeige:setValue(ME.lp, ME.lp_max, 
      &quot;&lt;b&gt; &quot; .. ME.lp .. &quot;/&quot; .. ME.lp_max .. &quot;&lt;/b&gt; &quot;)

  GUI.kp_anzeige:setValue(ME.kp, ME.kp_max, 
      &quot;&lt;b&gt; &quot; .. ME.kp .. &quot;/&quot; .. ME.kp_max .. &quot;&lt;/b&gt; &quot;)

  -- Treffer? Dann LP Balken blinken lassen

  if ME.lp &lt; ME.lp_alt then
    -- echo(&quot;Au!&quot;)
    lp_anzeige_blinken(0.2)
  else
    if not GUI.lp_anzeige_blinkt then
      lp_anzeige_faerben()
    end
  end
  ME.lp_alt = ME.lp

end

function lp_anzeige_faerben()

  -- Je nach LP Verlust wird Farbe gruen/gelb/rot

  local lp_quote = ME.lp / ME.lp_max
  GUI.lp_anzeige:setColor(255 * (1 - lp_quote), 
                          255 * lp_quote, 
                          50)
end

function lp_anzeige_blinken(dauer)

  GUI.lp_anzeige_blinkt = true
  GUI.lp_anzeige:setColor(255, 0, 50) -- rot
  tempTimer(dauer, [[ lp_anzeige_entblinken() ]])

end

function lp_anzeige_entblinken()

  GUI.lp_anzeige_blinkt = false
  lp_anzeige_faerben()

end</script>
                <eventHandlerList>
                    <string>gmcp.MG.char.vitals</string>
                    <string>gmcp.MG.char.maxvitals</string>
                </eventHandlerList>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>zeigeGift</name>
                <packageName></packageName>
                <script>function zeigeGift()

  ME.gift = gmcp.MG.char.vitals.poison
  local zeile = &quot;&quot;

  -- vergiftet?

  if ME.gift == 0 then
    r = 30
    g = 30
    b = 30
  else  -- Farbuebergang gelb-&gt;orange-&gt;rot 
    r = 255
    g = 255 - ME.gift * 25
    b = 0
    zeile = &quot;&lt;black&gt;G I F T&quot;
  end

  -- Statuszeile aktualisieren

  GUI.gift:echo(zeile)
  GUI.gift:setColor(r, g, b)

end</script>
                <eventHandlerList>
                    <string>gmcp.MG.char.vitals</string>
                </eventHandlerList>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>zeigeVorsicht</name>
                <packageName></packageName>
                <script>function zeigeVorsicht()

  ME.vorsicht = gmcp.MG.char.wimpy.wimpy
  ME.fluchtrichtung = gmcp.MG.char.wimpy.wimpy_dir

  -- Prinz Eisenherz?

  if ME.vorsicht == 0 then
    ME.vorsicht = &quot;NIX&quot;
  end

  local zeile = &quot;Vorsicht: &quot; .. ME.vorsicht

  -- Fluchtrichtung anzeigen, nur wenn gesetzt

  if ME.fluchtrichtung ~= 0 then
    zeile = zeile .. &quot;, FR: &quot; .. ME.fluchtrichtung
  end

  -- Statuszeile aktualisieren

  GUI.vorsicht:echo(zeile)

end</script>
                <eventHandlerList>
                    <string>gmcp.MG.char.wimpy</string>
                </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                <name>zeigeRaum</name>
                <packageName></packageName>
                <script>function zeigeRaum()

  ME.raum_kurz = gmcp.MG.room.info.short
  ME.raum_region = gmcp.MG.room.info.domain
  ME.raum_id = string.sub(gmcp.MG.room.info.id, 1, 5) 

  -- Para?

  if ME.para &gt; 0 then
    ME.raum_region = &quot;Para-&quot; .. ME.raum_region
    r = 255
    g = 0
    b = 0
  else
    r = 30
    g = 30
    b = 30
  end

  -- Statuszeile aktualisieren

  GUI.spieler:echo(ME.name .. &quot; [&quot; .. ME.stufe .. &quot;]&quot;)

  GUI.ort_raum:echo(ME.raum_kurz)
  GUI.ort_region:echo(ME.raum_region .. &quot; [&quot; .. ME.raum_id .. &quot;]&quot;)

  GUI.ort_raum:setColor(r, g, b)
  GUI.ort_region:setColor(r, g, b)

end</script>
                <eventHandlerList>
                    <string>gmcp.MG.room</string>
                </eventHandlerList>
            </Script>
            <Script isActive="yes" isFolder="no">
                <name>zeigeEbenen</name>
                <packageName></packageName>
                <script>function zeigeEbenen()
  fg(farben.vg.ebenen)
  bg(farben.hg.ebenen)
  echo(gmcp.comm.channel.msg)
  resetFormat()
end</script>
                <eventHandlerList>
                    <string>gmcp.comm.channel</string>
                </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                <name>initGUI</name>
                    <packageName></packageName>
                    <script>function initGUI()

  -- Textfenster begrenzen
  setBorderTop(0)
  setBorderBottom(65) -- bisschen Platz fuer Statuszeile
  setBorderLeft(0)
  setBorderRight(0)

  -- Statuszeile malen. Layout wie folgt:
  -- Zeile 1: spieler (Name, Stufe), gift, trenner_1, vorsicht (Vorsicht, Fluchtrichtung)
  -- Zeile 2: ort_raum (Region, Raumnummer, Para), ort_region (Ort kurz)
  -- Zeile 3: lp_titel, lp_anzeige (Lebenspunkte-Anzeige), kp_titel, kp_anzeige (KP-Anzeige), trenner_2

  GUI.statuszeile = Geyser.Container:new({name = &quot;statuszeile&quot;, x=0, y=-70, width = 600, height=70})

  -- Zeile 1
  GUI.spieler = Geyser.Label:new({
    name = &quot;spieler&quot;,
    x = 0, y = -65,
    width = 150, height = 20}, GUI.statuszeile)

  GUI.gift = Geyser.Label:new({
    name = &quot;gift&quot;,
    x = 150, y = -65,
    width = 50, height = 20}, GUI.statuszeile)

  GUI.trenner_1 = Geyser.Label:new({
    name = &quot;trenner_1&quot;,
    x = 200, y = -65,
    width = 50, height = 20}, GUI.statuszeile)

  GUI.vorsicht = Geyser.Label:new({
    name = &quot;vorsicht&quot;,
    x = 250, y = -65,
    width = 350, height = 20}, GUI.statuszeile)

  -- Zeile 2  
  GUI.ort_raum = Geyser.Label:new({
    name = &quot;ort_raum&quot;,
    x = 250, y = -45,
    width = 350, height = 20}, GUI.statuszeile)

  GUI.ort_region = Geyser.Label:new({
    name = &quot;ort_region&quot;,
    x = 0, y = -45,
    width = 250, height = 20}, GUI.statuszeile)

  -- Zeile 3
  GUI.lp_titel = Geyser.Label:new({
    name = &quot;lp_titel&quot;,
    x = 0, y = -25,
    width = 100, height = 20}, GUI.statuszeile)
  GUI.lp_titel:echo(&quot;Lebenspunkte:&quot;)

  GUI.lp_anzeige = Geyser.Gauge:new({
    name = &quot;lp_anzeige&quot;,
    x = 100, y = -25, 
    width = 140, height = 20}, GUI.statuszeile)
  GUI.lp_anzeige:setColor(0, 255, 50) 

  GUI.kp_titel = Geyser.Label:new({
    name = &quot;kp_titel&quot;,
    x = 240, y = -25,
    width = 110, height = 20}, GUI.statuszeile)
  GUI.kp_titel:echo(&quot;&amp;nbsp;Konzentration:&quot;)

  GUI.kp_anzeige = Geyser.Gauge:new({
    name = &quot;kp_anzeige&quot;,
    x = 350, y = -25,
    width = 150, height = 20}, GUI.statuszeile)
  GUI.kp_anzeige:setColor(0, 50, 250)

  GUI.trenner_2 = Geyser.Label:new({
    name = &quot;trenner_2&quot;,
    x = 500, y = -25,
    width = 100, height = 20}, GUI.statuszeile)

end</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
    </ScriptPackage>
  - <KeyPackage>
    - <KeyGroup isActive="yes" isFolder="yes">
        <name>Keypad</name> 
        <script /> 
        <command /> 
        <keyCode>-1</keyCode> 
        <keyModifier>-1</keyModifier> 
      - <Key isActive="yes" isFolder="no">
      -   <name>8: norden</name> 
        - <script /> 
    -     <command>norden</command> 
      -   <keyCode>56</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
      -   <name>0: schau</name> 
        - <script /> 
        - <command>schau</command> 
        - <keyCode>48</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
      -   <name>5: tanz</name> 
        - <script /> 
        - <command>tanz</command> 
        - <keyCode>53</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>+: unten</name> 
        - <script /> 
        - <command>unten</command> 
        - <keyCode>43</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>-: oben</name> 
        - <script /> 
        - <command>oben</command> 
        - <keyCode>45</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>1: suedwesten</name> 
        - <script /> 
        - <command>suedwesten</command> 
        - <keyCode>49</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>3: suedosten</name> 
        - <script /> 
        - <command>suedosten</command> 
        - <keyCode>51</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
      -   <name>7: nordwesten</name> 
        - <script /> 
        - <command>nordwesten</command> 
        - <keyCode>55</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>9: nordosten</name> 
        - <script /> 
        - <command>nordosten</command> 
        - <keyCode>57</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>4: westen</name> 
        - <script /> 
        - <command>westen</command> 
        - <keyCode>52</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>6: osten</name> 
        - <script /> 
        - <command>osten</command> 
        - <keyCode>54</keyCode> 
        - <keyModifier>536870912</keyModifier> 
        </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>2: sueden</name> 
        - <script /> 
        - <command>sueden</command> 
        - <keyCode>50</keyCode> 
        - <keyModifier>536870912</keyModifier> 
      - </Key>
      - <Key isActive="yes" isFolder="no">
        - <name>x: raus</name> 
        - <script /> 
        - <command>raus</command> 
        - <keyCode>42</keyCode>
        - <keyModifier>536870912</keyModifier>
      - </Key>
      </KeyGroup>
    </KeyPackage>
</MudletPackage>
